#!/usr/bin/env nix-shell
#!nix-shell -i bash -p glib rofi

while [[ "$#" -gt 0 ]]; do
  case $1 in
  --icon-font)
    ICON_FONT="$2"
    shift 2
    ;;
  --menu)
    SHOW_MENU=true
    shift
    ;;
  *)
    echo "Invalid option: $1"
    exit 1
    ;;
  esac
done

format_time() {
  local total_seconds="$1"
  local minutes seconds

  minutes=$((total_seconds / 60))
  seconds=$((total_seconds % 60))
  printf "%02d:%02d" "$minutes" "$seconds"
}

format_icon() {
  local icon="$1"

  if [[ "$ICON_FONT" ]]; then
    echo "%{T${ICON_FONT}}$icon%{T-}"
  else
    echo "$icon"
  fi
}

format_state_output() {
  local state="$1"
  local is_paused="$2"
  local remaining_seconds="$3"

  if [[ "$state" != 'stopped' && "$state" != "null" ]]; then
    local icon=''

    if [[ "$is_paused" == 'true' ]]; then
      icon='󰏤'
    elif [[ "$state" == 'pomodoro' ]]; then
      icon=''
    elif [[ "$state" == 'short-break' ]]; then
      icon='󰅶'
    elif [[ "$state" == 'long-break' ]]; then
      icon='󰢠'
    fi

    local formatted_icon formatted_time
    formatted_icon="$(format_icon "$icon")"
    formatted_time="$(format_time "$remaining_seconds")"
    echo -n "${formatted_icon} ${formatted_time}"
  else
    echo -n ''
  fi
}

declare -A current_state=(
  ['Elapsed']=0
  ['IsPaused']='false'
  ['State']='null'
  ['StateDuration']=0
)

get_initial_properties() {
  gdbus call --session \
    --dest org.gnome.Pomodoro \
    --object-path /org/gnome/Pomodoro \
    --method org.freedesktop.DBus.Properties.GetAll \
    org.gnome.Pomodoro
}

extract_property() {
  local properties="$1"
  local name="$2"
  local pattern="'${name}': <([^>]+)>"

  if [[ "$properties" =~ $pattern ]]; then
    local value="${BASH_REMATCH[1]}"
    case "$name" in
    'Elapsed' | 'StateDuration')
      echo -n "${value%.*}"
      ;;
    'IsPaused')
      echo -n "$value"
      ;;
    'State')
      [[ "$value" =~ \'([^\']+)\' ]] && echo -n "${BASH_REMATCH[1]}"
      ;;
    esac
  fi
}

update_state_from_properties() {
  local properties="$1"

  for prop in Elapsed IsPaused State StateDuration; do
    local value
    value="$(extract_property "$properties" "$prop")"
    if [[ -n "$value" ]]; then
      current_state["$prop"]="$value"
    fi
  done
}

update_state_from_change() {
  local line="$1"
  local properties

  if [[ "$line" =~ \{([^\}]+)\} ]]; then
    properties="${BASH_REMATCH[1]}"

    while [[ "$properties" =~ \'([^\']+)\' ]]; do
      local prop="${BASH_REMATCH[1]}"
      properties="${properties#*"${BASH_REMATCH[0]}"}"

      [[ "$properties" =~ \<([^>]+)\> ]] || continue
      local value="${BASH_REMATCH[1]}"
      properties="${properties#*"${BASH_REMATCH[0]}"}"

      case "$prop" in
      'Elapsed' | 'StateDuration')
        current_state["$prop"]="${value%.*}"
        ;;
      'IsPaused')
        current_state['IsPaused']="$value"
        ;;
      'State')
        [[ "$value" =~ \'([^\']+)\' ]] && current_state['State']="${BASH_REMATCH[1]}"
        ;;
      esac
    done
  fi
}

process_state() {
  local remaining_secs=$((current_state['StateDuration'] - current_state['Elapsed']))
  format_state_output "${current_state['State']}" "${current_state['IsPaused']}" "$remaining_secs"
  echo ''
}

show_menu() {
  local state="${current_state['State']}"
  local is_paused="${current_state['IsPaused']}"
  local options=''
  local selection

  if [[ "$state" == ?(pomodoro|short-break|long-break) ]]; then
    if [[ "$is_paused" == 'true' ]]; then
      options+='Resume\0icon\x1fmedia-playback-start\n'
    else
      options+='Pause\0icon\x1fmedia-playback-pause\n'
    fi
    options+='Stop\0icon\x1fmedia-playback-stop\n'
  fi
  options+='Pomodoro\n'
  options+='Short Break\n'
  options+='Long Break\n'

  selection="$(echo -en "$options" | rofi -dmenu -show-icons -p 'Pomodoro')"

  case "$selection" in
  Resume)
    gdbus call --session \
      --dest org.gnome.Pomodoro \
      --object-path /org/gnome/Pomodoro \
      --method org.gnome.Pomodoro.Resume \
      >/dev/null
    ;;
  Pause)
    gdbus call --session \
      --dest org.gnome.Pomodoro \
      --object-path /org/gnome/Pomodoro \
      --method org.gnome.Pomodoro.Pause \
      >/dev/null
    ;;
  Stop)
    gdbus call --session \
      --dest org.gnome.Pomodoro \
      --object-path /org/gnome/Pomodoro \
      --method org.gnome.Pomodoro.Stop \
      >/dev/null
    ;;
  Pomodoro)
    gdbus call --session \
      --dest org.gnome.Pomodoro \
      --object-path /org/gnome/Pomodoro \
      --method org.gnome.Pomodoro.SetState \
      'pomodoro' 0 \
      >/dev/null
    ;;
  Short\ Break)
    gdbus call --session \
      --dest org.gnome.Pomodoro \
      --object-path /org/gnome/Pomodoro \
      --method org.gnome.Pomodoro.SetState \
      'short-break' 0 \
      >/dev/null
    ;;
  Long\ Break)
    gdbus call --session \
      --dest org.gnome.Pomodoro \
      --object-path /org/gnome/Pomodoro \
      --method org.gnome.Pomodoro.SetState \
      'long-break' 0 \
      >/dev/null
    ;;
  esac
}

initial_properties="$(get_initial_properties)"
update_state_from_properties "$initial_properties"

if [[ "$SHOW_MENU" == true ]]; then
  show_menu
  exit 0
fi

process_state

gdbus monitor --session \
  --dest org.gnome.Pomodoro \
  --object-path /org/gnome/Pomodoro |
  while IFS= read -r line; do
    if [[ "$line" =~ org\.freedesktop\.DBus\.Properties\.PropertiesChanged ]]; then
      update_state_from_change "$line"
      process_state
    fi
  done

# vim: set ft=bash:
