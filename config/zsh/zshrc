# -*- mode: sh; sh-shell: zsh -*-

KEYTIMEOUT=1
bindkey -e
bindkey '^u' backward-kill-line
autoload -Uz select-word-style
select-word-style bash

setopt APPEND_HISTORY \
       AUTO_LIST \
       AUTO_MENU \
       AUTO_PARAM_KEYS \
       AUTO_PARAM_SLASH \
       AUTO_PUSHD \
       AUTO_RESUME \
       EQUALS GLOB_DOTS \
       HIST_FCNTL_LOCK \
       HIST_IGNORE_DUPS \
       HIST_IGNORE_SPACE \
       HIST_REDUCE_BLANKS \
       INTERACTIVE_COMMENTS \
       NO_BEEP \
       NUMERIC_GLOB_SORT \
       PRINT_EIGHT_BIT \
       PROMPT_SUBST \
       PUSHD_IGNORE_DUPS \
       SHARE_HISTORY
unsetopt LIST_BEEP

. "${ZDOTDIR}/.zi/bin/zi.zsh"

## Commands

zi ice trigger-load '!extract;!x' id-as'OMZP::extract'
zi snippet '@oh_my_zsh@/share/oh-my-zsh/plugins/extract/extract.plugin.zsh'

if [[ "$OSTYPE" == darwin* ]]; then
  zi ice id-as'PZT::modules--gnu-utility'
  zi light '@zsh_prezto@/modules/gnu-utility'
fi


#
## Completions

if [[ "$OSTYPE" == darwin* && -d /Applications/Docker.app ]]; then
    zi ice lucid wait as'completion' mv'docker.zsh-completion -> _docker'
    zi snippet /Applications/Docker.app/Contents/Resources/etc/docker.zsh-completion
    zi ice lucid wait as'completion' mv'docker-compose.zsh-completion -> _docker-compose'
    zi snippet /Applications/Docker.app/Contents/Resources/etc/docker-compose.zsh-completion
fi


## Shell Enhancements

zi ice ver'v0.7.0' wait'0' lucid
zi light 'zsh-users/zsh-autosuggestions'

zi ice ver'9d003fc02dbaa6db06e6b12e8c271398478e0b5d' wait'0' lucid
zi light 'hlissner/zsh-autopair'

zi ice ver'v1.55' wait lucid atinit'ZI[COMPINIT_OPTS]=-C; zpcompinit; zpcdreplay'
zi light z-shell/F-Sy-H

FZF_DEFAULT_OPTS='--cycle --reverse --info=inline'
FZF_DEFAULT_COMMAND='@fd@/bin/fd -HL -t f -E .git'
FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
FZF_CTRL_T_OPTS="--preview='@bat@/bin/bat -pp --color=always {}'"
FZF_ALT_C_OPTS="--preview='@exa@/bin/exa -la {}'"
FZF_TMUX=1
FZF_TMUX_OPTS='-p 80%,80%'
zi ice bindmap'^R->;\\ec->' multisrc'{completion,key-bindings}.zsh'
zi light '@fzf@/share/fzf'
bindkey -M emacs -r '^R'
bindkey -M vicmd -r '^R'
bindkey -M viins -r '^R'

zi ice src'zhook.zsh' id-as'atuin' atclone'atuin init zsh >zhook.zsh' atpull'%atclone'
zi light z-shell/0

zi ice ver'c8625305797b1d8f822c7575e85b26e5b32560c7'
zi light sei40kr/zsh-smart-history

if [[ -n "$TMUX" ]]; then
  zi ice ver'37a3c697461b33dd2f85998431cdfec6d963be37'
  zi light 'sei40kr/zsh-tmux-man'
  # Remove alias run-help=man
  if [[ ${+aliases[run-help]} == 1 ]]; then
    unalias run-help
  fi
fi

zi ice id-as'OMZP::bgnotify'
zi snippet '@oh_my_zsh@/share/oh-my-zsh/plugins/bgnotify/bgnotify.plugin.zsh'

zi ice id-as'OMZL::clipboard.zsh'
zi snippet '@oh_my_zsh@/share/oh-my-zsh/lib/clipboard.zsh'

HYPHEN_INSENSITIVE=true
zi ice id-as'OMZL::completion.zsh'
zi snippet '@oh_my_zsh@/share/oh-my-zsh/lib/completion.zsh'

zi ice from'gh-r' ver'v2.19.0' as'program' atclone'./navi widget zsh >zhook.zsh' atpull'%atclone' src'zhook.zsh'
zi light denisidoro/navi

## Key Bindings

zi ice id-as'OMZP::fancy-ctrl-z'
zi snippet '@oh_my_zsh@/share/oh-my-zsh/plugins/fancy-ctrl-z/fancy-ctrl-z.plugin.zsh'

## Prompt

eval "$(starship init zsh)"

# vim: set ft=zsh
